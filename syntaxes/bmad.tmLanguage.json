{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bmad",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"match": "\\b(sub/[\\w/\\.]+)\\b",
			"name": "string.unquoted.myLanguage"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#assignments"
		},
		{
			"include": "#lineDefinition"
		},
		{
			"include": "#callStatements"
		},
		{
			"include": "#elementDefinition"
		},
		{
			"include": "#useStatements"
		},
		{
			"match": "[+-]?\\d*\\.\\d+(?:[eE][+-]?\\d+)?|[+-]?\\d+(?:[eE][+-]?\\d+)?",
			"name": "constant.numeric.myLanguage"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#mathOperators"
		}
	],
	"repository": {
		"numbers": {
			"match": "[+-]?\\d*\\.\\d+(?:[eE][+-]?\\d+)?|[+-]?\\d+(?:[eE][+-]?\\d+)?",
			"name": "constant.numeric.myLanguage"
		},
		"mathOperators": {
			"name": "keyword.operator.math.bmad",
			"match": "[+\\-*/^]"
		},
		"assignments": {
			"captures": {
				"1": {
					"name": "punctuation.whitespace.leading.bmad"
				},
				"2": {
					"name": "variable.element.name.bmad"
				},
				"3": {
					"name": "variable.parameter.brackets.bmad"
				},
				"4": {
					"name": "variable.parameter.attribute.bmad"
				},
				"5": {
					"patterns": [
						{
							"match": "\"[^\"]*\"",
							"name": "string.quoted.double.bmad"
						},
						{
							"match": "[+-]?\\d*\\.\\d+(?:[eE][+-]?\\d+)?|[+-]?\\d+(?:[eE][+-]?\\d+)?",
							"name": "constant.numeric.bmad"
						},
						{
							"match": "\\bT\\b|\\bF\\b",
							"name": "constant.language.boolean.bmad"
						},
						{
							"include": "#comments"
						}
					]
				}
			},
			"match": "(?i)^(\\s*)([A-Za-z%*:\\#\\\\][A-Za-z0-9._\\#\\\\%*:\\-]*[A-Za-z0-9]?(?<!##))(\\[([A-Za-z_][A-Za-z0-9_-]*)\\])\\s*=\\s*([^\\n]+)*$",
			"name": "variable.assignment.element.bmad"
		},
		"attributeAssignments": {
			"captures": {
				"1": {
					"name": "variable.parameter.name.bmad"
				},
				"2": {
					"name": "variable.parameter.value.bmad"
				}
			},
			"match": "(?i)\\b([A-Za-z_][A-Za-z0-9_-]*)\\b\\s*=\\s*([^,\\n!]+)",
			"name": "variable.parameter.assignment.bmad"
		},
		"callStatements": {
			"captures": {
				"1": {
					"name": "keyword.control.call.bmad"
				},
				"2": {
					"name": "keyword.control.file.bmad"
				},
				"3": {
					"name": "string.unquoted.filepath.bmad"
				},
				"4": {
					"name": "comment.line.exclamation.bmad",
					"patterns": [
						{
							"include": "#comments"
						}
					]
				}
			},
			"match": "(?i)^\\s*(call)\\s*,\\s*(file)\\s*=\\s*([\\w./\\\\-]+)\\s*(\\s*(!.*)?$)",
			"name": "meta.call-statement.bmad"
		},
		"comments": {
			"match": "\\s*!.*",
			"name": "comment.line.exclamation.myLanguage"
		},
		"element-names": {
			"patterns": [
				{
					"match": "(?i)\\b(?<!\\w)(?!\\d)(?!.*##)(?!\\b(?:beam|beginning|call|calc_reference_orbit|combine_consecutive_elements|debug_marker|end_file|expand_lattice|merge_elements|no_digested|no_superimpose|parameter|parser_debug|particle_start|print|redef|remove_elements|return|root|slice_lattice|start_branch_at|superimpose|title|use|use_local_lat_file|write_digested)\\b)[A-Z][A-Z0-9._#\\\\]*[A-Z0-9]?(?<!##)",
					"name": "variable.element.name.bmad"
				}
			]
		},
		"elementDefinition": {
			"begin": "(?i)^\\s*((?<!\\w)(?!\\d)(?!.*##)(?!\\b(?:beam|beginning|call|calc_reference_orbit|combine_consecutive_elements|debug_marker|end_file|expand_lattice|merge_elements|no_digested|no_superimpose|parameter|parser_debug|particle_start|print|redef|remove_elements|return|root|slice_lattice|start_branch_at|superimpose|title|use|use_local_lat_file|write_digested)\\b)[A-Z][A-Z0-9._#\\\\]*[A-Z0-9]?(?<!##))\\s*:\\s*((?<!\\w)(?!\\d)(?!.*##)[A-Z][A-Z0-9._\\#\\\\]*[A-Z0-9]?(?<!##))",
			"beginCaptures": {
				"1": {
					"name": "variable.element.name.bmad"
				},
				"2": {
					"name": "keyword.control.elementType.bmad"
				}
			},
			"end": "(?<![\\s,])\\s*$",
			"endCaptures": {
				"0": {
					"name": "punctuation.terminator.end-of-statement.bmad"
				}
			},
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#attributeAssignments"
				},
				{
					"match": "\\s*,\\s*",
					"name": "punctuation.separator.parameter.bmad"
				}
			]
		},
		"lineDefinition": {
			"begin": "(?i)\\s*\\b(\\b(?<!\\w)(?!\\d)(?!.*##)(?!\\b(?:beam|beginning|call|calc_reference_orbit|combine_consecutive_elements|debug_marker|end_file|expand_lattice|merge_elements|no_digested|no_superimpose|parameter|parser_debug|particle_start|print|redef|remove_elements|return|root|slice_lattice|start_branch_at|superimpose|title|use|use_local_lat_file|write_digested)\\b)[A-Z][A-Z0-9._#\\\\]*[A-Z0-9]?(?<!##))\\s*(\\([A-Za-z0-9_,\\s]*\\))?\\s*:\\s*(line)\\s*(=)\\s*\\(",
			"beginCaptures": {
				"1": {
					"name": "variable.element.name.bmad"
				},
				"2": {
					"patterns": [
						{
							"include": "#element-names"
						},
						{
							"match": ",",
							"name": "punctuation.separator.element.bmad"
						}
					]
				},
				"3": {
					"name": "keyword.control.lineKeyword.bmad"
				},
				"4": {
					"name": "keyword.operator.assignment.bmad"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.group.end.bmad"
				}
			},
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#mathOperators"
				},
				{
					"include": "#element-names"
				},
				{
					"match": ",",
					"name": "punctuation.separator.element.bmad"
				}
			]
		},
		"strings": {
			"begin": "\"",
			"end": "\"",
			"name": "string.quoted.double.bmad",
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape.bmad"
				}
			]
		},
		"useStatements": {
			"captures": {
				"1": {
					"name": "keyword.control.use.bmad"
				},
				"2": {
					"name": "variable.element.name.bmad"
				},
				"3": {
					"name": "comment.line.exclamation.bmad",
					"patterns": [
						{
							"include": "#comments"
						}
					]
				}
			},
			"match": "(?i)^\\s*(use)\\s*,\\s*([A-Z][A-Z0-9._\\#\\\\]*[A-Z0-9]?(?<!##))\\s*(\\s*(!.*)?$)",
			"name": "meta.use-statement.bmad"
		}
	},
	"scopeName": "source.bmad"
}