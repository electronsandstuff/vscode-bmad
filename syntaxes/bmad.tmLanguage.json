{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "Bmad",
	"patterns": [
		{
			"include": "#comments"
		},
		{
			"match": "\\b(sub/[\\w/\\.]+)\\b",
			"name": "string.unquoted.myLanguage"
		},
		{
			"include": "#strings"
		},
		{
			"include": "#assignments"
		},
		{
			"include": "#lineDefinition"
		},
		{
			"include": "#callStatements"
		},
		{
			"include": "#elementDefinition"
		},
		{
			"include": "#useStatements"
		},
		{
			"match": "[+-]?\\d*\\.\\d+(?:[eE][+-]?\\d+)?|[+-]?\\d+(?:[eE][+-]?\\d+)?",
			"name": "constant.numeric.myLanguage"
		},
		{
			"include": "#numbers"
		},
		{
			"include": "#mathOperators"
		},
		{
            "include": "#keywordBeam"
        },
        {
            "include": "#keywordBeginning"
        },
        {
            "include": "#keywordCalcReferenceOrbit"
        },
        {
            "include": "#keywordCall"
        },
        {
            "include": "#keywordCombineConsecutiveElements"
        },
        {
            "include": "#keywordDebugMarker"
        },
        {
            "include": "#keywordEndFile"
        },
        {
            "include": "#keywordExpandLattice"
        },
        {
            "include": "#keywordMergeElements"
        },
        {
            "include": "#keywordNoDigested"
        },
        {
            "include": "#keywordNoSuperimpose"
        },
        {
            "include": "#keywordParameter"
        },
        {
            "include": "#keywordParserDebug"
        },
        {
            "include": "#keywordParticleStart"
        },
        {
            "include": "#keywordPi"
        },
        {
            "include": "#keywordPrint"
        },
        {
            "include": "#keywordRedef"
        },
        {
            "include": "#keywordRemoveElements"
        },
        {
            "include": "#keywordReturn"
        },
        {
            "include": "#keywordRoot"
        },
        {
            "include": "#keywordSliceLattice"
        },
        {
            "include": "#keywordStartBranchAt"
        },
        {
            "include": "#keywordSuperimpose"
        },
        {
            "include": "#keywordTitle"
        },
        {
            "include": "#keywordUse"
        },
        {
            "include": "#keywordUseLocalLatFile"
        },
        {
            "include": "#keywordWriteDigested"
        },
		{
            "include": "#speciesAntiDeuteron"
        },
        {
            "include": "#speciesAntiHelion"
        },
        {
            "include": "#speciesAntiNeutron"
        },
        {
            "include": "#speciesAntimuon"
        },
        {
            "include": "#speciesAntiproton"
        },
        {
            "include": "#speciesDeuteron"
        },
        {
            "include": "#speciesElectron"
        },
        {
            "include": "#speciesHelion"
        },
        {
            "include": "#speciesMuon"
        },
        {
            "include": "#speciesNeutron"
        },
        {
            "include": "#speciesPhoton"
        },
        {
            "include": "#speciesPionMinus"
        },
        {
            "include": "#speciesPionPlus"
        },
        {
            "include": "#speciesPionZero"
        },
        {
            "include": "#speciesPositron"
        },
        {
            "include": "#speciesProton"
        }
	],
	"repository": {
		"numbers": {
			"match": "[+-]?\\d*\\.\\d+(?:[eE][+-]?\\d+)?|[+-]?\\d+(?:[eE][+-]?\\d+)?",
			"name": "constant.numeric.myLanguage"
		},
		"mathOperators": {
			"name": "keyword.operator.math.bmad",
			"match": "[+\\-*/^]"
		},
		"assignments": {
			"captures": {
				"1": {
					"name": "punctuation.whitespace.leading.bmad"
				},
				"2": {
					"name": "variable.element.name.bmad"
				},
				"3": {
					"name": "variable.parameter.brackets.bmad"
				},
				"4": {
					"name": "variable.parameter.attribute.bmad"
				},
				"5": {
					"patterns": [
						{
							"match": "\"[^\"]*\"",
							"name": "string.quoted.double.bmad"
						},
						{
							"match": "[+-]?\\d*\\.\\d+(?:[eE][+-]?\\d+)?|[+-]?\\d+(?:[eE][+-]?\\d+)?",
							"name": "constant.numeric.bmad"
						},
						{
							"match": "\\bT\\b|\\bF\\b",
							"name": "constant.language.boolean.bmad"
						},
						{
							"include": "#comments"
						}
					]
				}
			},
			"match": "(?i)^(\\s*)([A-Za-z%*:\\#\\\\][A-Za-z0-9._\\#\\\\%*:\\-]*[A-Za-z0-9]?(?<!##))(\\[([A-Za-z_][A-Za-z0-9_-]*)\\])\\s*=\\s*([^\\n]+)*$",
			"name": "variable.assignment.element.bmad"
		},
		"attributeAssignments": {
			"captures": {
				"1": {
					"name": "variable.parameter.name.bmad"
				},
				"2": {
					"name": "variable.parameter.value.bmad"
				}
			},
			"match": "(?i)\\b([A-Za-z_][A-Za-z0-9_-]*)\\b\\s*=\\s*([^,\\n!]+)",
			"name": "variable.parameter.assignment.bmad"
		},
		"callStatements": {
			"captures": {
				"1": {
					"name": "keyword.control.call.bmad"
				},
				"2": {
					"name": "keyword.control.file.bmad"
				},
				"3": {
					"name": "string.unquoted.filepath.bmad"
				},
				"4": {
					"name": "comment.line.exclamation.bmad",
					"patterns": [
						{
							"include": "#comments"
						}
					]
				}
			},
			"match": "(?i)^\\s*(call)\\s*,\\s*(file)\\s*=\\s*([\\w./\\\\-]+)\\s*(\\s*(!.*)?$)",
			"name": "meta.call-statement.bmad"
		},
		"comments": {
			"match": "\\s*!.*",
			"name": "comment.line.exclamation.myLanguage"
		},
		"element-names": {
			"patterns": [
				{
					"match": "(?i)\\b(?<!\\w)(?!\\d)(?!.*##)(?!\\b(?:beam|beginning|call|calc_reference_orbit|combine_consecutive_elements|debug_marker|end_file|expand_lattice|merge_elements|no_digested|no_superimpose|parameter|parser_debug|particle_start|print|redef|remove_elements|return|root|slice_lattice|start_branch_at|superimpose|title|use|use_local_lat_file|write_digested)\\b)[A-Z][A-Z0-9._#\\\\]*[A-Z0-9]?(?<!##)",
					"name": "variable.element.name.bmad"
				}
			]
		},
		"elementDefinition": {
			"begin": "(?i)^\\s*((?<!\\w)(?!\\d)(?!.*##)(?!\\b(?:beam|beginning|call|calc_reference_orbit|combine_consecutive_elements|debug_marker|end_file|expand_lattice|merge_elements|no_digested|no_superimpose|parameter|parser_debug|particle_start|print|redef|remove_elements|return|root|slice_lattice|start_branch_at|superimpose|title|use|use_local_lat_file|write_digested)\\b)[A-Z][A-Z0-9._#\\\\]*[A-Z0-9]?(?<!##))\\s*:\\s*((?<!\\w)(?!\\d)(?!.*##)[A-Z][A-Z0-9._\\#\\\\]*[A-Z0-9]?(?<!##))",
			"beginCaptures": {
				"1": {
					"name": "variable.element.name.bmad"
				},
				"2": {
					"name": "keyword.control.elementType.bmad"
				}
			},
			"end": "(?<![\\s,])\\s*$",
			"endCaptures": {
				"0": {
					"name": "punctuation.terminator.end-of-statement.bmad"
				}
			},
			"patterns": [
				{
					"include": "#strings"
				},
				{
					"include": "#comments"
				},
				{
					"include": "#attributeAssignments"
				},
				{
					"match": "\\s*,\\s*",
					"name": "punctuation.separator.parameter.bmad"
				}
			]
		},
		"lineDefinition": {
			"begin": "(?i)\\s*\\b(\\b(?<!\\w)(?!\\d)(?!.*##)(?!\\b(?:beam|beginning|call|calc_reference_orbit|combine_consecutive_elements|debug_marker|end_file|expand_lattice|merge_elements|no_digested|no_superimpose|parameter|parser_debug|particle_start|print|redef|remove_elements|return|root|slice_lattice|start_branch_at|superimpose|title|use|use_local_lat_file|write_digested)\\b)[A-Z][A-Z0-9._#\\\\]*[A-Z0-9]?(?<!##))\\s*(\\([A-Za-z0-9_,\\s]*\\))?\\s*:\\s*(line)\\s*(=)\\s*\\(",
			"beginCaptures": {
				"1": {
					"name": "variable.element.name.bmad"
				},
				"2": {
					"patterns": [
						{
							"include": "#element-names"
						},
						{
							"match": ",",
							"name": "punctuation.separator.element.bmad"
						}
					]
				},
				"3": {
					"name": "keyword.control.lineKeyword.bmad"
				},
				"4": {
					"name": "keyword.operator.assignment.bmad"
				}
			},
			"end": "\\)",
			"endCaptures": {
				"0": {
					"name": "punctuation.definition.group.end.bmad"
				}
			},
			"patterns": [
				{
					"include": "#comments"
				},
				{
					"include": "#numbers"
				},
				{
					"include": "#mathOperators"
				},
				{
					"include": "#element-names"
				},
				{
					"match": ",",
					"name": "punctuation.separator.element.bmad"
				}
			]
		},
		"strings": {
			"begin": "\"",
			"end": "\"",
			"name": "string.quoted.double.bmad",
			"patterns": [
				{
					"match": "\\\\.",
					"name": "constant.character.escape.bmad"
				}
			]
		},
		"useStatements": {
			"captures": {
				"1": {
					"name": "keyword.control.use.bmad"
				},
				"2": {
					"name": "variable.element.name.bmad"
				},
				"3": {
					"name": "comment.line.exclamation.bmad",
					"patterns": [
						{
							"include": "#comments"
						}
					]
				}
			},
			"match": "(?i)^\\s*(use)\\s*,\\s*([A-Z][A-Z0-9._\\#\\\\]*[A-Z0-9]?(?<!##))\\s*(\\s*(!.*)?$)",
			"name": "meta.use-statement.bmad"
		},
		"keywordBeam": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bbeam\\b"
        },
        "keywordBeginning": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bbeginning\\b"
        },
        "keywordCalcReferenceOrbit": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bcalc_reference_orbit\\b"
        },
        "keywordCall": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bcall\\b"
        },
        "keywordCombineConsecutiveElements": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bcombine_consecutive_elements\\b"
        },
        "keywordDebugMarker": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bdebug_marker\\b"
        },
        "keywordEndFile": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bend_file\\b"
        },
        "keywordExpandLattice": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bexpand_lattice\\b"
        },
        "keywordMergeElements": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bmerge_elements\\b"
        },
        "keywordNoDigested": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bno_digested\\b"
        },
        "keywordNoSuperimpose": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bno_superimpose\\b"
        },
        "keywordParameter": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bparameter\\b"
        },
        "keywordParserDebug": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bparser_debug\\b"
        },
        "keywordParticleStart": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bparticle_start\\b"
        },
        "keywordPi": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bpi\\b"
        },
        "keywordPrint": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bprint\\b"
        },
        "keywordRedef": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bredef\\b"
        },
        "keywordRemoveElements": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bremove_elements\\b"
        },
        "keywordReturn": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\breturn\\b"
        },
        "keywordRoot": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\broot\\b"
        },
        "keywordSliceLattice": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bslice_lattice\\b"
        },
        "keywordStartBranchAt": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bstart_branch_at\\b"
        },
        "keywordSuperimpose": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bsuperimpose\\b"
        },
        "keywordTitle": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\btitle\\b"
        },
        "keywordUse": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\buse\\b"
        },
        "keywordUseLocalLatFile": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\buse_local_lat_file\\b"
        },
        "keywordWriteDigested": {
            "name": "keyword.control.bmad",
            "match": "(?i)\\bwrite_digested\\b"
        },
		"speciesAntiDeuteron": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\banti_deuteron\\b"
        },
        "speciesAntiHelion": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\banti_helion\\b"
        },
        "speciesAntiNeutron": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\banti_neutron\\b"
        },
        "speciesAntimuon": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bantimuon\\b"
        },
        "speciesAntiproton": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bantiproton\\b"
        },
        "speciesDeuteron": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bdeuteron\\b"
        },
        "speciesElectron": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\belectron\\b"
        },
        "speciesHelion": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bhelion\\b"
        },
        "speciesMuon": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bmuon\\b"
        },
        "speciesNeutron": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bneutron\\b"
        },
        "speciesPhoton": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bphoton\\b"
        },
        "speciesPionMinus": {
            "name": "constant.language.species.bmad",
            "match": "(?i)(^|\\s)pion-($|\\s)"
        },
        "speciesPionPlus": {
            "name": "constant.language.species.bmad",
            "match": "(?i)(^|\\s)pion\\+($|\\s)"
        },
        "speciesPionZero": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bpion0\\b"
        },
        "speciesPositron": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bpositron\\b"
        },
        "speciesProton": {
            "name": "constant.language.species.bmad",
            "match": "(?i)\\bproton\\b"
        }
	},
	"scopeName": "source.bmad"
}